version: '3'
services:
  reverse-proxy:
    hostname: reverse-proxy
    container_name: reverse-proxy
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --log.level=DEBUG
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  hello-nest:
    hostname: hello-nest
    container_name: hello-nest
    build:
      context: ./services/hello-world-service
      dockerfile: Dockerfile
    image: hello-nest
    ports:
      - :3000
    labels:
      - traefik.http.services.hello-nest.loadbalancer.server.port=3000
      - traefik.http.routers.hello-nest.rule=PathPrefix(`/nest`)
      - traefik.http.routers.hello-nest.middlewares=hello-nest-stripprefix
      - traefik.http.middlewares.hello-nest-stripprefix.stripprefix.prefixes=/nest
  weather:
    hostname: weather
    container_name: weather
    build:
      context: ./services/dotnet-api/
      dockerfile: Dockerfile
    image: dotnet-api
    ports:
      - :5000
    labels:
      - traefik.http.services.weather.loadbalancer.server.port=5000
      - traefik.http.routers.weather.rule=PathPrefix(`/api/weatherforecast`)
      - traefik.http.routers.weather.middlewares=weather-stripprefix
      - traefik.http.middlewares.weather-stripprefix.stripprefix.prefixes=/api
  homepage:
    hostname: homepage
    container_name: homepage
    build:
      context: ./services/homepage/
      dockerfile: Dockerfile
    image: homepage-react-app
    ports:
      - :3000
    labels:
      - traefik.http.routers.homepage.rule=PathPrefix(`/`)
      - traefik.http.services.homepage.loadbalancer.server.port=3000
