version: '3'
services:
  reverse-proxy:
    hostname: reverse-proxy
    container_name: reverse-proxy
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --log.level=DEBUG
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  hello-nest:
    hostname: hello-nest
    container_name: hello-nest
    build:
      context: ./services/hello-world-service
      dockerfile: Dockerfile
    image: hello-nest
    ports:
      - :3000
    labels:
      - traefik.http.services.hello-nest.loadbalancer.server.port=3000
      - traefik.http.routers.hello-nest.rule=PathPrefix(`/nest`)
      - traefik.http.routers.hello-nest.middlewares=hello-nest-stripprefix
      - traefik.http.middlewares.hello-nest-stripprefix.stripprefix.prefixes=/nest
  grpc-server:
    hostname: grpc-server
    container_name: grpc-server
    build:
      context: ./services/nest-grpc-server
      dockerfile: Dockerfile
    image: nest-grpc-server
    ports:
      - :3001
    entrypoint: ["node", "main.js"]
    labels:
      - traefik.http.services.grpc-server.loadbalancer.server.port=3001
      - traefik.http.routers.grpc-server.rule=PathPrefix(`/grpc-server`)
      - traefik.http.routers.grpc-server.middlewares=grpc-server-stripprefix
      - traefik.http.middlewares.grpc-server-stripprefix.stripprefix.prefixes=/grpc-server
  grpc-client:
    hostname: grpc-client
    container_name: grpc-client
    build:
      context: ./services/nest-grpc-client
      dockerfile: Dockerfile
      target: development
    depends_on:
      - grpc-server
    image: nest-grpc-client
    volumes:
      - ./services/nest-grpc-client:/usr/src/app
    ports:
      - :3000
    command: npm run start:dev
    labels:
      - traefik.http.services.grpc-client.loadbalancer.server.port=3000
      - traefik.http.routers.grpc-client.rule=PathPrefix(`/grpc-client`)
      - traefik.http.routers.grpc-client.middlewares=grpc-client-stripprefix
      - traefik.http.middlewares.grpc-client-stripprefix.stripprefix.prefixes=/grpc-client
  grpc-ms1:
    hostname: grpc-ms1
    container_name: grpc-ms1
    build:
      context: ./services/grpc-ms1
      dockerfile: Dockerfile
    depends_on:
      - grpc-server
    image: grpc-ms1
    volumes:
      - ./services/grpc-ms1:/app
    ports:
      - :5000
    command: npm run start
    labels:
      - traefik.http.services.grpc-ms1.loadbalancer.server.port=5000
      - traefik.http.routers.grpc-ms1.rule=PathPrefix(`/grpc-ms1`)
      - traefik.http.routers.grpc-ms1.middlewares=grpc-ms1-stripprefix
      - traefik.http.middlewares.grpc-ms1-stripprefix.stripprefix.prefixes=/grpc-ms1
  grpc-ms2:
    hostname: grpc-ms2
    container_name: grpc-ms2
    build:
      context: ./services/grpc-ms2
      dockerfile: Dockerfile
    depends_on:
      - grpc-server
    image: grpc-ms2
    volumes:
      - ./services/grpc-ms2:/app
    ports:
      - :3000
    command: npm run start
    labels:
      - traefik.http.services.grpc-ms2.loadbalancer.server.port=3000
      - traefik.http.routers.grpc-ms2.rule=PathPrefix(`/grpc-ms2`)
      - traefik.http.routers.grpc-ms2.middlewares=grpc-ms2-stripprefix
      - traefik.http.middlewares.grpc-ms2-stripprefix.stripprefix.prefixes=/grpc-ms2
  weather:
    hostname: weather
    container_name: weather
    build:
      context: ./services/dotnet-api/
      dockerfile: Dockerfile
    image: dotnet-api
    ports:
      - :5000
    labels:
      - traefik.http.services.weather.loadbalancer.server.port=5000
      - traefik.http.routers.weather.rule=PathPrefix(`/api/weatherforecast`)
      - traefik.http.routers.weather.middlewares=weather-stripprefix
      - traefik.http.middlewares.weather-stripprefix.stripprefix.prefixes=/api
  homepage:
    hostname: homepage
    container_name: homepage
    build:
      context: ./services/homepage/
      dockerfile: Dockerfile
    image: homepage-react-app
    ports:
      - :3000
    labels:
      - traefik.http.routers.homepage.rule=PathPrefix(`/`)
      - traefik.http.services.homepage.loadbalancer.server.port=3000
